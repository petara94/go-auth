openapi: 3.0.0
info:
  title: Auth API
  version: 1.0.0
  description: API Documentation

tags:
  - name: users
    description: Методы для пользователей
  - name: authorise
    description: Методы авторизации
  - name: admin
    description: Только для администраторов

security:
  - ApiKeyAuth: [ ]

paths:

  /api/v1/users/me:
    get:
      tags:
        - users
      summary: Получение пользователя по api токену
      security:
        - ApiKeyAuth: [ ]
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPublic"
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

  /api/v1/users/me/change-pass:
    post:
      tags:
        - users
      summary: Смена пароля
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassReq"
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResp"
        '400':
          description: Неверный запрос
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

  /api/v1/users:
    get:
      tags:
        - admin
      summary: Получение списка пользователей
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - $ref: "#/components/parameters/PerPageQueryParam"
        - $ref: "#/components/parameters/PageQueryParam"
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

  /api/v1/sessions:
    get:
      tags:
        - admin
      summary: Получение списка сессий
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - $ref: "#/components/parameters/PerPageQueryParam"
        - $ref: "#/components/parameters/PageQueryParam"
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Session"
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

  /api/v1/users/{id}/set-block:
    post:
      tags:
        - admin
      summary: Блокировка пользователя
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: ID пользователя
          schema:
            type: integer
            format: int64
        - name: block
          in: query
          required: true
          description: Значение блокировки
          schema:
            type: boolean
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResp"
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

  /api/v1/users/{id}/set-admin:
    post:
      tags:
        - admin
      summary: Добавление пользователя в администраторы
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: ID пользователя
          schema:
            type: integer
            format: int64
        - name: admin
          in: query
          required: true
          description: Значение администратора
          schema:
            type: boolean
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResp"
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

  /api/v1/users/{id}/set-pass-check:
    post:
      tags:
        - admin
      summary: Установка проверки пароля
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: ID пользователя
          schema:
            type: integer
            format: int64
        - name: check
          in: query
          required: true
          description: Значение проверки пароля
          schema:
            type: boolean
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResp"
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

  /api/v1/users/{id}:
    get:
      tags:
        - admin
      summary: Получение пользователя по ID
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: ID пользователя
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

    put:
      tags:
        - admin
      summary: Обновление пользователя
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: ID пользователя
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserReq"
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Неверный запрос
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

    delete:
      tags:
        - admin
      summary: Удаление пользователя
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: ID пользователя
          schema:
            type: number
            format: int64
      responses:
        '204':
          description: Нет содержимого
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

  /api/v1/users/empty:
    post:
      tags:
        - admin
      summary: Создание пустого пользователя c логином
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - name: login
          in: query
          required: true
          description: Логин пользователя
          schema:
            type: string
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Неверный запрос
        '404':
          description: Не найдено
        '500':
          description: Ошибка сервера

  /api/v1/auth/register:
    post:
      tags:
        - authorise
      summary: Регистрация нового пользователя
      requestBody:
        description:
          Данные пользователя. Пароль должен содержать не
          менее 8 символов, включая цифры, буквы и знаки арифметических операций
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegisterReq"
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResp"
        '400':
          description: Неверный запрос
        '500':
          description: Ошибка сервера

  /api/v1/auth/login:
    post:
      tags:
        - authorise
      summary: Авторизация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginReq"
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        '400':
          description: Неверный запрос
        '401':
          description: Неверный логин или пароль
        '500':
          description: Ошибка сервера

  /api/v1/auth/logout:
    post:
      tags:
        - authorise
      summary: Завершение сеанса пользователя
      security:
        - ApiKeyAuth: [ ]
      responses:
        '204':
          description: Нет содержимого
        '400':
          description: Неверный запрос
        '500':
          description: Ошибка сервера

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-AUTH-TOKEN
  parameters:
    PerPageQueryParam:
      name: per_page
      in: query
      required: true
      description: Количество элементов на странице
      schema:
        type: number
        format: int64
    PageQueryParam:
      name: page
      in: query
      required: true
      description: начать со страницы
      schema:
        type: number
        format: int64
  schemas:
    MessageResp:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Сообщение

    User:
      type: object
      required:
        - login
        - password
      properties:
        id:
          type: number
          format: int64
          description: ID пользователя
        login:
          example: vasya_pupkin
          type: string
          description: Логин пользователя
        password:
          example: 6b++bbbbbb
          type: string
          description: Пароль пользователя
        is_admin:
          type: boolean
          description: Признак администратора
        is_blocked:
          type: boolean
          description: Признак блокировки
        check_password:
          type: boolean
          description: Признак проверки пароля

    UserRegisterReq:
      type: object
      description: Учетные данные пользователя
      required:
        - login
        - password
      properties:
        login:
          example: vasya_pupkin
          type: string
          description: Логин пользователя
        password:
          example: 6b++bbbbbb
          type: string
          description: Пароль пользователя

    UserLoginReq:
      type: object
      description: Учетные данные пользователя
      required:
        - login
        - password
      properties:
        login:
          example: vasya_pupkin
          type: string
          description: Логин пользователя
        password:
          example: 6b++bbbbbb
          type: string
          description: Пароль пользователя
        ttl:
          example: "4h30m"
          default: null
          type: string
          description: Время жизни сессии

    UserPublic:
      type: object
      required:
        - login
        - password
      properties:
        id:
          type: integer
          format: int64
          description: ID пользователя
        login:
          example: vasya_pupkin
          type: string
          description: Логин пользователя
        password:
          example: 6b++aaaaaa
          type: string
          description: Пароль пользователя

    UserReq:
      type: object
      required:
        - login
        - password
      properties:
        login:
          example: vasya_pupkin
          type: string
          description: Логин пользователя
        password:
          example: 6b++bbbbbb
          type: string
          description: Пароль пользователя
        is_admin:
          type: boolean
          description: Признак администратора
        is_blocked:
          type: boolean
          description: Признак блокировки
        check_password:
          type: boolean
          description: Признак проверки пароля

    ChangePassReq:
      type: object
      required:
        - old_password
        - new_password
      properties:
        old_password:
          example: 6b++bbbbbb
          type: string
          description: Старый пароль пользователя
        new_password:
          example: 6b++bbbbbb
          type: string
          description: Новый пароль пользователя

    Auth:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: Логин пользователя
        password:
          type: string
          description: Пароль пользователя

    Session:
      type: object
      required:
        - token
        - user_id
      properties:
        token:
          type: string
          description: Токен сеанса пользователя
        user_id:
          type: integer
          format: int64
          description: ID пользователя
        expr:
          type: string
          format: date-time
          nullable: true
          description: Дата и время истечения срока действия токена сеанса пользователя
